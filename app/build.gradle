/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.9.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id "com.github.spotbugs" version "5.0.5"
}

checkstyle {
    configFile file("config/checkstyle/checkstyle.xml")
    toolVersion = '9.3'
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

spotbugs {
  toolVersion = '4.5.3'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'
    // use Mockito test framework.
    testImplementation "org.mockito:mockito-core:3.+"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'

}
test { // https://docs.gradle.org/5.2.1/userguide/java_testing.html#using_junit5 
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// ensure that Javadoc does not fail our build
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

application {
    // Define the main class for the application.
    mainClass = 'p1.hangman.App'
}

run {
    standardInput = System.in
}